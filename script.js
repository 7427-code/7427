document.getElementById('send-button').addEventListener('click', sendMessage);
document.getElementById('user-input').addEventListener('keydown', function(event) {
    if (event.key === 'Enter') {
        sendMessage();
    }
});

const helpResponses = [
    "borrar: Elimina el chat",
    "buscame: Busca en Google lo que sigue despu√©s de la palabra clave",
    "cronometro: Inicia un cron√≥metro",
    "dime: Busca en Google lo que sigue despu√©s de la palabra clave",
    "que es: Busca en Google lo que sigue despu√©s de la palabra clave",
    "qu√© es: Busca en Google lo que sigue despu√©s de la palabra clave"
];

function requestNotificationPermission() {
    if ('Notification' in window) {
        Notification.requestPermission().then(permission => {
            if (permission === 'granted') {
                console.log('Permiso de notificaciones concedido');
            } else {
                console.log('Permiso de notificaciones denegado');
            }
        });
    }
}

// Llamar a la funci√≥n para pedir permiso cuando se carga la p√°gina
window.addEventListener('load', () => {
    requestNotificationPermission();
    loadChatState();
    appendMessage('bot', 'Hola');
    appendMessage('bot', 'Si quieres ver de lo que soy capaz, escr√≠beme "ay√∫dame" y te cuento la pel√≠cula.');
    appendMessage('bot', 'PD: D√©jame dormir.');
    sendNotification('Holi', 'Holi, tambi√©n puedo mandarte mensajitos, no te pensar√°s que solo me molestar√°s t√∫, <3.');
});

function sendMessage() {
    const userInput = document.getElementById('user-input');
    const message = userInput.value.trim();
    if (message) {
        appendMessage('user', message);
        userInput.value = '';
        userInput.focus();

        // Procesa la entrada del usuario
        setTimeout(() => {
            handleUserMessage(message);
        }, 1000);
    }
}

function appendMessage(sender, message) {
    const chatBox = document.getElementById('chat-box');
    const messageElement = document.createElement('div');
    messageElement.className = sender;
    messageElement.textContent = message;
    chatBox.appendChild(messageElement);
    chatBox.scrollTop = chatBox.scrollHeight;

    // Guarda el estado del chat en localStorage
    saveChatState();
}

function handleUserMessage(message) {
    const lowerCaseInput = message.toLowerCase().trim();

    if (lowerCaseInput.startsWith("borrar")) {
        clearChat();
        changeIcon("üíÅ", 3000, "üë©");
        appendMessage('bot', 'Chat borrado.');
    } else if (lowerCaseInput.startsWith("buscame") || lowerCaseInput.startsWith("dime") || lowerCaseInput.startsWith("que es") || lowerCaseInput.startsWith("qu√© es")) {
        const query = lowerCaseInput.replace("buscame", '').replace("dime", '').replace("que es", '').replace("qu√© es", '').trim();
        const response = "Vamos a ver qu√© dice internet.";
        appendMessage('bot', response);
        changeIcon("üíÅ", 3000, "üë©");
        setTimeout(() => {
            window.open(`https://www.google.com/search?q=${encodeURIComponent(query)}`, '_blank');
        }, 3000);
    } else if (lowerCaseInput.startsWith("cronometro")) {
        changeIcon("üôÜ", 3000, "üë©");
        askForTimerDetails();
    } else if (lowerCaseInput.startsWith("ayuda")) {
        changeIcon("üßè", 3000, "üë©");
        showHelp();
    } else {
        changeIcon("ü§∑", 2000, "üë©");
        appendMessage('bot', getRandomBotResponse());
    }
}

function askForTimerDetails() {
    appendMessage('bot', 'T√≠tulo de la alarma:');
    const titleInput = prompt('T√≠tulo de la alarma:');
    appendMessage('bot', `T√≠tulo: ${titleInput}`);
    appendMessage('bot', 'Tiempo de duraci√≥n (en minutos):');
    const durationInput = prompt('Tiempo de duraci√≥n (en minutos):');
    appendMessage('bot', `Duraci√≥n: ${durationInput} minutos`);

    // Crear la nueva p√°gina para el cron√≥metro
    openTimerPage(titleInput, parseInt(durationInput, 10));
}

function openTimerPage(title, duration) {
    const timerWindow = window.open("", "_blank", "width=400,height=400");

    timerWindow.document.write(`
        <!DOCTYPE html>
        <html lang="es">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Cron√≥metro</title>
            <style>
                body {
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    justify-content: center;
                    height: 100vh;
                    background-color: #000000;
                    color: #ffffff;
                }
                #timer {
                    font-size: 5em;
                    margin: 20px 0;
                }
                #end-button {
                    padding: 10px 20px;
                    font-size: 1.5em;
                    background-color: #ff0000;
                    color: #ffffff;
                    border: none;
                    border-radius: 5px;
                    cursor: pointer;
                    display: none;
                }
            </style>
        </head>
        <body>
            <h1>${title}</h1>
            <div id="timer">${duration}:00</div>
            <button id="end-button">Fin</button>
            <script>
                let time = ${duration} * 60; // Convertimos minutos a segundos
                const timerDisplay = document.getElementById('timer');
                const endButton = document.getElementById('end-button');
                let youtubeWindow;

                const interval = setInterval(() => {
                    if (time > 0) {
                        const minutes = Math.floor(time / 60);
                        const seconds = time % 60;
                        timerDisplay.textContent = \`\${minutes}:\${seconds < 10 ? '0' : ''}\${seconds}\`;
                        time--;
                    } else {
                        clearInterval(interval);
                        speakMessage('${title} finalizado');
                        openYouTubeLink();
                        endButton.style.display = 'block';
                    }
                }, 1000);

                endButton.onclick = () => {
                    if (youtubeWindow) {
                        youtubeWindow.close();
                    }
                    window.close();
                };

                function speakMessage(message) {
                    const utterance = new SpeechSynthesisUtterance(message);
                    window.speechSynthesis.speak(utterance);
                }

                function openYouTubeLink() {
                    youtubeWindow = window.open("https://www.youtube.com/watch?v=7ejH_BihwFQ", "_blank");
                    setTimeout(() => {
                        if (youtubeWindow) {
                            youtubeWindow.close();
                        }
                    }, 120000); // Cierra la pesta√±a despu√©s de 2 minutos (120000 ms)
                }
            </script>
        </body>
        </html>
    `);
}

function showHelp() {
    const helpMessage = helpResponses.join('\n');
    appendMessage('bot', helpMessage);
}

function getRandomBotResponse() {
    const responses = [
        "¬øQu√© quieres ahora?",
        "Ah, eres t√∫ otra vez...",
        "Qu√© fastidio verte de nuevo...",
        "No tienes nada mejor que hacer ¬øverdad?",
        "Vaya, el ser inferior aparece...",
        "Aqu√≠ est√°s otra vez, perdiendo el tiempo...",
        "¬øQu√© te hace pensar que me importas?"
    ];
    return responses[Math.floor(Math.random() * responses.length)];
}

function clearChat() {
    const chatBox = document.getElementById('chat-box');
    chatBox.innerHTML = '';
    localStorage.removeItem('chatState');
}

function saveChatState() {
    const chatBox = document.getElementById('chat-box');
    const chatState = chatBox.innerHTML;
    localStorage.setItem('chatState', chatState);
}

function loadChatState() {
    const chatState = localStorage.getItem('chatState');
    if (chatState) {
        const chatBox = document.getElementById('chat-box');
        chatBox.innerHTML = chatState;
        chatBox.scrollTop = chatBox.scrollHeight;
    }
}

function sendNotification(title, message) {
    if ('Notification' in window && Notification.permission === 'granted') {
        new Notification(title, { body: message });
    }
}

function changeIcon(newIcon, duration, revertIcon) {
    const modeIcon = document.getElementById('mode-icon');
    modeIcon.textContent = newIcon;
    setTimeout(() => {
        modeIcon.textContent = revertIcon;
    }, duration);
}
